---
- hosts: controlplane
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  # - name: Add vagrant user to docker group
  #   user:
  #     name: vagrant
  #     group: docker
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Setting daemon.json for Docker cgroup systemd
    ansible.builtin.copy:
      src: daemon.json
      dest: /etc/docker/daemon.json
      owner: root
      group: root
      mode: u=rw,g=r,o=r
  
  - name: Restart Docker
    service:
      name: docker
      enabled: yes
      daemon_reload: yes
      state: restarted
      
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Check is kubeadm has ran
    stat: 
      path: /var/lib/kubelet/config.yaml
    register: kubelet

  - name: Running kubeadm to initiate the cluster
    command: kubeadm init
    when: not kubelet.stat.exists

  - name: Creating .kube/config directory
    ansible.builtin.file:
      path: /root/.kube
      state: directory

  - name: Copying admin.conf to .kube
    ansible.builtin.copy:
      remote_src: yes
      src: /etc/kubernetes/admin.conf
      dest: /root/.kube/config

  - name: Applying weave CNI
    shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    delegate_to: localhost
    become_user: root
    ansible.builtin.copy:
      content="{{ join_command.stdout_lines[0] }}" 
      dest="./join-command.sh"

  handlers:
    - name: docker status
      service: name=docker state=started